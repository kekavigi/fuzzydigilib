{"Nomor": 66549, "Judul": "PENGEMBANGAN KAKAS BANTU DETEKSI DESIGN SMELL DENGAN MENGGUNAKAN UML CLASS DIAGRAM", "Abstrak": "Kualitas perangkat lunak adalah salah satu masalah terpenting dalam rekayasa\nperangkat lunak yang menarik perhatian baik dari praktisi maupun peneliti. Upaya\ndalam menjamin kualitas perangkat lunak yang baik perlu dilakukan dari awal\nsiklus pengembangan, salah satu yang memiliki pengaruh besar pada kualitas\ntersebut adalah bagaimana pengembang melakukan perancangan atau desain\nterhadap perangkat lunak. Namun kecerobohan dan kurangnya pengalaman dapat\nmembuat desain menjadi kurang baik. Desain yang kurang baik tersebut dapat\ndiartikan sebagai design smell. Design smell dapat berdampak negatif terhadap\nkualitas perangkat lunak. Kakas bantu yang tersedia dalam mendeteksi design smell\numumnya terdapat pada kode program. Sedangkan mendeteksi design smell sedini\nmungkin adalah hal yang perlu dilakukan, deteksi biasanya terjadi sangat terlambat,\ndan kemudian solusinya sangat kompleks. Oleh sebab itu diperlukan kakas yang\ndapat mendeteksi design smell pada tahap perancangan. Artefak UML class\ndiagram pada tahap perancangan dapat dimanfaatkan untuk mendeteksi design\nsmell karena memiliki informasi class dan hubungan antara class pada sistem.\nDalam pengembangan kakas, diperlukan identifikasi karakteristik design smell\nberdasarkan UML class diagram. Identifikasi dilakukan berdasarkan definisi yang\ntelah dikemukakan oleh para peneliti sebelumnya yang kemudian dilakukan\nanalisis sesuai informasi yang tersedia pada UML class diagram. Hasil analisis\ntersebut kemudian divalidasi oleh ahli perangkat lunak yang terdiri dari para\npraktisi dan akademisi. Hasilnya design smell dapat diidentifikasi dengan\nmemanfaatkan metrik perangkat lunak yang tersedia, aturan dan ambang batas yang\nditentukan berdasarkan karakteristik setiap jenis design smell. Dari 25 jenis design\nsmell, deteksi pada UML class diagram dapat digolongkan menjadi tiga, yaitu 12\nsmell yang dapat dideteksi secara otomatis, 7 smell dideteksi otomatis sebagian dari\nmanifestasinya, dan 6 smell yang perlu dideteksi dengan tinjauan langsung atau\nmemerlukan informasi kode program. Hasil deteksi design smell pada UML class\ndiagram masih bersifat terduga, sehingga masih perlu untuk dilakukan pemeriksaan\nkembali apakah memang smell tersebut harus dihindari atau tidak pada keadaan\ntertentu.\nKakas bantu deteksi design smell dengan class diagram (DECLAD) dikembangkan\ndengan memanfaatkan berkas XML dari UML class diagram sebagai input pada\nkakas, untuk kemudian diproses lebih lanjut sesuai karakteristik yang didapatkan.\nDECLAD mampu melakukan deteksi terhadap 19 design smell yang tergolong\ndapat dideteksi otomatis dan dideteksi otomatis sebagian dari manifestasinya, yaitu\nmissing abstraction, imperative abstraction, multifaceted abstraction, unnecessary\nabstraction, unutilized abstraction, duplicate abstraction, deficient encapsulation,\nleaky encapsulation, broken modularization, insufficient modularization,\ncyclically-dependent modularization, hub-like modularization, unnecessary\nhierarchy, unfactored hierarchy, wide hierarchy, speculative hierarchy, deep\nhierarchy, multipath hierarchy dan cyclic hierarchy. DECLAD dapat mempercepat\nproses deteksi yang dilakukan oleh pengembang perangkat lunak pada tahap\nperancangan berdasarkan UML class diagram dan dapat mendeteksi design smell\nlebih dini.", "Daftar File": {"COVER Sigit Widodo": "https://digilib.itb.ac.id/gdl/download/256126", "PUSTAKA Sigit Widodo": "https://digilib.itb.ac.id/gdl/download/256132"}, "Penulis": "Sigit Widodo [23520036]", "Kontributor / Dosen Pembimbing": ["Dr. techn. Wikan Danar Sunindyo, S.T., M.Sc."], "Jenis Koleksi": "Tesis", "Penerbit": "Informatika", "Fakultas": "Sekolah Teknik Elektro dan Informatika", "Subjek": "", "Kata Kunci": "design smell, class diagram, kakas, deteksi.", "Sumber": "", "Staf Input/Edit": "Dessy Rondang Monaomi", "File": "7 file", "Tanggal Input": "28 Jun 2022"}
{"Nomor": 66828, "Judul": "PENGEMBANGANDOMAIN-SPECIFICLANGUAGEUNTUK  SPESIFIKASI SMART CONTRACT", "Abstrak": "ABSTRAK \nPENGEMBANGANDOMAIN-SPECIFICLANGUAGEUNTUK \nSPESIFIKASI SMART CONTRACT\nOleh \nLabib Izzatur Rahman \nNIM:23520007 \n(Program Studi Magister Informatika) \nSmart Contact merupak:an kode program yang berisi kumpulan kode dan state yang dapat tereksekusi sendiri berdasarkan state tertentu. lstilah smart contract pertama dicetuskan untuk mengenalkan kontrak digital yang dapat automatis mengeksekusi dirinya sendiri termasuk mengeksekusi ketentuan dan penalti terhadap semua pihak terkait berdasarkan aturan-aturan yang ditulis pada smart contract tersebut. Smart contract memberikan keuntungan kepada bisnis atau organisasi dibandingkan kontrak tradisional karena dapat menghilangkan perantara yang mengawasi jalannya suatu kontrak:. \nSmart contract berbentuk kode program yang berarti terdapat perbedaan antara dalam penulisan smart contract dengan kontrak tradisional. Smart contract dibangun dengan bahasa pemrograman sedangkan kontrak: tradisional ditulis dengan bahasa natural language yang lebih fleksibel dibandingkan bahasa pemrograman. Karena perbedaan ini terdapat kesulitan bagi domain expert untuk memahami, dan memvalidasi smart contract yang berbentuk kode program. Domain expert yang tidak mempunyai keahlian dalam bahasa pemrograman mungkin ak:an mengalami kesulitan memahami dan membaca kode program. Kesulitan ini terjadi karena ada perbedaan konsep dan sintak:s antara bahasa pemrograman smart contract dengan kontrak: tradisional. \nTesis ini merumuskan Domain-Specific Language (DSL) yang diberi nama Specification Language for Smart Contracts (SL4SC) yang dapat memuat spesifikasi dari smart contract dalam format yang mendekati natural language yang terdapat pada kontrak tradisional. Dengan sintaks yang berdasarkan natural language, SL4SC bertujuan untuk membuat domain expert dan developer memiliki bahasa yang holistik dalam memahami requirement smart contract. Menggunak:an SL4SC developer dapat melak:ukan requirement validation dengan me-review model yang diciptakan dengan SL4SC dibandingkan dengan requirement smart contract yang harus dibuat. \nUntuk lebih memanfaatkan model, pendekatan model-driven development (MDD) dapat dilak:ukan terhadap model yang diproduksi oleh SL4SC. MDD merupak:an segala pendekatan untuk mengubah suatu model menjadi implementasi kode. MDD dapat dilakukan terhadap SL4SC untuk menghasilkan construct dan function sebagai mapping dari specification ke code implementation. \nSL4SC dikembangkan dengan language workbench bernama MetaProgrammingSystem(MPS). MPS merupakan language workbench untuk membuat DSL dengan editor projectional yang juga mendukung model transformation baik model-to-model dan model-to-text. Editor projectional dapat mendukung notasi symbol, textual, tabular, dan graphic. Editor projectional membolehkan end-user DSL untuk mengedit representasi Abstract syntax tree(AST). Ini berbeda dengan editor lain yang umumnya membuat sebuah parser yang menganalisis suatu text file untuk dijadikan suatu AST. Editor projectional memberikan keuntungan ekstensi bahasa dan customizability lebih dibandingkan language workbench berbasis parser. \nSL4SC divalidasi terhadap dua sampel kontrak dan didapatkan bahwa SL4SC dapat menyebutkan spesifikasi suatu kontrak walaupun dengan tingkat kesulitan tertentu. Terdapat beberapa grammar yang belum dapat digambarkan oleh SL4SC akan tetapi dapat dibenahi dengan pembuatan language extension dari SL4SC ataupun perubahan secara langsung ke SL4SC. Code generation juga dilakukan dengan target Solidity untuk platform blockchain Ethereum sebagai blockchain yang populer untuk pembuatan smart contract. Code generation berhasil menghasilkan struktural dari smart contract berisi nama class, variabel-variabel terkait, dan function. Akan tetapi function tersebut dengan rancangan SL4SC belum dapat menghasilkan implementasi konkret dari function. Code generation dapat digunakan developer sebagai mapping requirement smart contract ke code implementation. Secara keseluruhan, SL4SC mampu menyebutkan spesifikasi smart contract dalam format yang berdasarkan natural language sehingga lebih mudah dalam membaca dan memvalidasi dibandingkan membaca langsung dari kode pemrograman smart contract. \nKata kunci: Smart Contract, Domain-specific language, Contract, Code Generation", "Daftar File": {"ABSTRAK - Labib Izatur Rahman": "https://digilib.itb.ac.id/gdl/download/253326"}, "Penulis": "Labib Izzatur Rahman [23520007]", "Kontributor / Dosen Pembimbing": ["Dr. techn. Muhammad Zuhri Catur Candra, S.T., M.T."], "Jenis Koleksi": "Tesis", "Penerbit": "Informatika", "Fakultas": "Sekolah Teknik Elektro dan Informatika", "Subjek": "", "Kata Kunci": "Smart Contract, Domain-specific language, Contract, Code Generation", "Sumber": "", "Staf Input/Edit": "Didin Syafruddin Asa, S.Sos", "File": "1 file", "Tanggal Input": "22 Jul 2022"}